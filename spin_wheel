###Rust ORM Diesel#####

- cargo new --lib spin-wheel
- cd spin-wheel
- cargo add diesel --features "postgres"
- cargo add async_trait;
- cargo add dotenvy
- echo DATABASE_URL=postgres://postgres:adminpostgres@localhost/spin_wheel > .env
- diesel setup


#### Create dump Sql with Relation In Up migrations #####
CREATE TABLE public.tb_companies (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	uuid varchar(255) NULL,
	companies_code varchar(255) NULL,
	companies_name varchar(255) NULL,
	created_by varchar(50) NULL,
	created_at timestamp NULL,
	updated_by varchar(50) NULL,
	updated_at timestamp NULL,
	companies_address varchar NULL,
	is_company_enabled bool NULL,
	CONSTRAINT company_pkey PRIMARY KEY (id)
);
CREATE INDEX tb_companies_companies_address_idx ON public.tb_companies USING btree (companies_address);
CREATE INDEX tb_companies_companies_code_idx ON public.tb_companies USING btree (companies_code);

CREATE TABLE public.tb_spin_tickets (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	userid varchar NOT NULL,
	username varchar NULL,
	ticket_id int4 NOT NULL,
	ticket_uuid varchar NOT NULL,
	status varchar NULL,
	pointrule_id int4 NOT NULL,
	expired_date varchar NULL,
	pointrule_name varchar NULL,
	ticket_number varchar NULL,
	expired_type varchar NULL,
	expired_value int4 NULL,
	created_date varchar NULL,
	user_uuid varchar NULL,
	is_payment_gateway bool NULL,
	company_code varchar NULL,
	CONSTRAINT unique_ticket_uuid UNIQUE (ticket_uuid)
);

CREATE TABLE public.tb_spin_rewards (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	reward_name varchar(255) NULL,
	reward_note varchar(255) NULL,
	reward_category varchar(25) NULL,
	reward_amount int4 NOT NULL,
	reward_status varchar(25) NOT NULL,
	reward_money int4 NULL DEFAULT 0,
	companies_code varchar(25) NOT NULL,
	percentage int4 NULL,
	reward_image varchar NULL,
	created_at timestamp NULL,
	updated_at timestamp NULL,
	reward_order int4 NULL,
	CONSTRAINT tb_spin_reward_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tb_spin_used (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	user_id varchar NOT NULL,
	created_at timestamp NULL,
	updated_at timestamp NULL,
	created_by varchar NULL,
	updated_by varchar NULL,
	used_status varchar NULL,
	prize_id int4 NOT NULL,
	companies_code varchar NULL,
	ticket_uuid varchar NULL,
	CONSTRAINT tb_spin_used_pkey PRIMARY KEY (id)
);


CREATE TABLE public.tb_spin_success_process (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	ticket_uuid varchar NOT NULL,
	user_id varchar NULL,
	reward_name varchar NULL,
	status varchar NULL,
	reward_type varchar NULL,
	"money" int4 NULL,
	post_status varchar NULL,
	created_at timestamp NULL
);


CREATE TABLE public.tb_spin_failed_process (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	ticket_uuid varchar NOT NULL,
	user_id varchar NULL,
	reward_name varchar NULL,
	status varchar NULL,
	reward_type varchar NULL,
	"money" int4 NULL,
	post_status varchar NULL,
	created_at timestamp NULL,
	updated_at timestamp NULL,
	reward_description varchar NULL,
	url_address varchar NULL,
	failed_message varchar NULL
);
CREATE INDEX tb_spin_failed_process_ticket_uuid_idx ON public.tb_spin_failed_process USING btree (ticket_uuid, status, url_address);