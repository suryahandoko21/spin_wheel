###Rust ORM Diesel#####

- cargo new --lib spin-wheel
- cd spin-wheel
- cargo add diesel --features "postgres"
- cargo add async_trait;
- cargo add dotenvy
- echo DATABASE_URL=postgres://postgres:adminpostgres@localhost/spin_wheel > .env
- diesel setup
#### Migration Table #####
- diesel migration generate create_spin_prizes
- diesel migration generate create_spin_lists
- diesel migration generate create_spin_referals
- diesel migration generate create_spin_promos
- diesel migration generate create_spin_transactions
- diesel migration generate create_spin_histories
- diesel migration generate create_spin_logs

#### Create dump Sql with Relation In Up migrations #####

- id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),

ask ?
1. apakah kode referal dapat digunakan di seluruh agen ?
2. apakah kode referal hanya 1 saja yang di generate oleh user
- spin wheel 

- table spin_referal
	- id :ai , pk
	- referal_code : (code generated by player)
	- referal_from: (user_id)
	- validity : (start code referal can be used for spin)
	- expired :  (if code reveral is expired can't be used anymore)
	- created_by: ( created by)
	- created_date :(date created)
	- update_at :
	- update_by:
	- company_code:
	- referal_status:(when first created default is active )

- table  
 - id :ai , pk
 - current_point : (ask from BE amount only one every transaction or can be more than one every created)
 - created_at
 - user_id
 - company_code
 - username
 - expire -> waiting from PO
 - point_currention_time(timestamp(string)) jika sama jangan ditambah 

 


- table spin_lists
 - id :ai , pk
 - company_code
 - status
 - created_by
 - created_at
 - updated_by
 - updated_at
 - quantity (depending on set qty ) -> value will decrease when prize has been choosed
 - prize_id : foreign_key table spin_prizes

 	- if in application :
 		if(prize.category == 'money')
 			then call api backend for update balance player based on prize amount


- table spin_prizes
 - id : ai , pk
 - weight: value ex (0 until 100)
 - name : ex (Marchedes benz, cash money)
 - notes : not mandatory
 - category: enum(money,other)
 - amount : nb: default 0 (if category money then amount must fullfill  )

table spin_transaction
	- id
	- created_at
	- prize_id
	- user_id 
	- spin_mode : enum(referal,promo)
	- code : default(promo)

	trigger(){
		if referal then update table referal status = used where referal_code=transaction_code
		if promo then reduce(-1) amount of table spin_promo where user_id= transaction.user_id and company_code = prize.company_code
	}





### SQL##
create or type REFERAL_STATUSES as enum('active','used');
create table tb_spin_referals(
    id int8 primary key NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
    referal_code varchar not null,
    referal_from varchar not null,
    referal_valid Timestamp,
    referal_expires Timestamp,
    company_code varchar not null,
    referal_status REFERAL_STATUSES default null,
    created_at Timestamp,
    update_at Timestamp,
    created_by varchar,
    update_by varchar
);


create table tb_spin_promos(
     id int8 primary key NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
     promo_amount int,
     code_user varchar not null,
     company_code varchar not null,
     expired_at Timestamp,
     point_currention_time Timestamp,
     created_at Timestamp,
     update_at Timestamp,
     created_by varchar,
     update_by varchar   
);



create type PRIZES_CATEGORIES as enum('cash','gift');
create table tb_spin_prizes(
      id int8 primary key NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
      prize_weight int not null,
      prize_name varchar not null,
      prize_note varchar,
      prize_category PRIZES_CATEGORIES default null,  
      prize_amount int
);


create table tb_spin_lists(
    id int8 primary key NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
    company_code varchar not null,
    list_status varchar,
    quantity int not null,
    prize_id SERIAL REFERENCES tb_spin_prizes(id),
    created_at Timestamp,
    update_at Timestamp,
    created_by Timestamp,
    update_by Timestamp
);

create type SPIN_MODE as enum('referal','promo');
create table tb_spin_transactions(
    id int8 primary key NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
    transaction_mode SPIN_MODE default null,
    transaction_code varchar,
    prize_id SERIAL REFERENCES tb_spin_prizes(id),
    code_user varchar not null,
    created_at Timestamp,
    update_at Timestamp,
    created_by varchar,
    update_by varchar
    
);





CREATE TABLE public.tb_spin_tickets (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	user_uuid varchar NOT NULL,
	userid varchar NOT NULL,
	username varchar NULL,
	ticket_id int4 NOT NULL,
	ticket_uuid varchar NOT NULL,
	status varchar NULL,
	pointrule_id int4 NOT NULL,
	expired_date varchar NULL,
	pointrule_name varchar NULL,
	ticket_number varchar NULL,
	expired_type varchar NULL,
	expired_value int4 NULL,
	created_date varchar NULL,
	CONSTRAINT unique_ticket_uuid UNIQUE (ticket_uuid)
);

- spin wheel
 - add kolom deskripsi (di endpoint)
 - tambah order di spin
 - tidak ada delete reward (hanya status active/inactive)
 - total persen harus 100 
 - add reward atau update harus berbarengan
 - tambah image di spin_prize(hanya path nya)
 - type zonk,product,cash


-- public.tb_spin_used definition

-- Drop table

-- DROP TABLE public.tb_spin_used;

CREATE TABLE public.tb_failed_process (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	ticket_uuid varchar NOT NULL,
	user_id varchar NULL,
	reward_name varchar NULL,
	status varchar NULL,
	reward_type varchar NULL,
	money varchar NULL,
    post_status varchar,
    created_at Timestamp,
    updated_at Timestamp
);

CREATE TABLE public.tb_success_process (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	ticket_uuid varchar NOT NULL,
	user_ud varchar NULL,
	reward_name varchar NULL,
	status varchar NULL,
	reward_type varchar NULL,
	money varchar NULL,
    post_status varchar,
    created_at Timestamp,
);